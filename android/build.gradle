
/*
 * Copyright 2014 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/repo' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
    maven { url 'https://maven.fabric.io/repo' }
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-project.txt')
        }
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress 'apk'
    }

    productFlavors { 
        io2014 {
            applicationId = "com.google.samples.apps.iosched"
//            uniqueContentIdentifier = "iosched2014"

            manifestPlaceholders = [
                    uniqueContentIdentifier:"iosched2014",
                    mapsApiKey:""
            ]

            buildConfigField "boolean", "HAS_VIDEO_LIBRARY", "true"
            buildConfigField "boolean", "SUPPORTS_PEER_BADGE_SCANNING", "true"
            buildConfigField "boolean", "SUPPORTS_REMOTE_VIEWING", "true"
            buildConfigField "boolean", "USE_EXTERNAL_MAPS", "false"

            buildConfigField "double", "VENUE_LATITUDE", "37.783107"
            buildConfigField "double", "VENUE_LONGITUDE", "-122.403789"
            buildConfigField "double", "VENUE_CAMERA_LATITUDE", "37.78308931536713"
            buildConfigField "double", "VENUE_CAMERA_LONGITUDE", "-122.40409433841705"

            buildConfigField "String", "CONFERENCE_NAME", "\"Google I/O 2014\""
            buildConfigField "String", "CONFERENCE_DATA_MANIFEST_URL", "\"\""
            buildConfigField "String", "OAUTH_APP_NAME", "\"GoogleIO-Android\""
            buildConfigField "String", "OAUTH_API_KEY", "\"\""
            buildConfigField "String", "GCM_API_KEY", "\"\""
            buildConfigField "String", "GCM_SENDER_ID", "\"\""
            buildConfigField "String", "GCM_URL", "\"\""

            buildConfigField "String", "BOOTSTRAP_DATA_TIMESTAMP", "\"Thu, 10 Apr 2014 00:01:03 GMT\""
            buildConfigField "String", "CONFERENCE_FEEDBACK_URL", "null"
            buildConfigField "String", "CONFERENCE_HASHTAG", "\"#io14\""
            buildConfigField "String", "CONFERENCE_HASHTAG_PREFIX", "\"#io\""
            buildConfigField "String", "CONFERENCE_TIMEZONE", "\"America/Los_Angeles\""
            buildConfigField "String", "CONFERENCE_GAME_PACKAGE_NAME", "\"com.google.wolff.androidhunt2\""
            buildConfigField "String", "FEEDBACK_API_CODE", "\"\""
            buildConfigField "String", "FEEDBACK_API_KEY", "\"\""
            buildConfigField "String", "FEEDBACK_SURVEY_ID", "\"\""
            buildConfigField "String", "FEEDBACK_URL", "\"\""
            buildConfigField "String", "UNIQUE_CONTENT_IDENTIFIER", "\"iosched2014\""
            buildConfigField "String", "WIFI_SSID", "\"IO2014\""
            buildConfigField "String", "WIFI_PASSPHRASE", "\"letsdothis\""

            buildConfigField "Class<? extends android.app.Fragment>", "SOCIAL_FRAGMENT_CLASS",
                             "com.google.samples.apps.iosched.ui.HashtagsFragment.class"

            buildConfigField "long[][]", "CONFERENCE_DAYS", "new long[][] {\n" +
                    "            {  " +
                    "               com.google.samples.apps.iosched.util.ParserUtils.parseTime(\"2014-06-25T07:00:00.000Z\"),\n" +
                    "               com.google.samples.apps.iosched.util.ParserUtils.parseTime(\"2014-06-26T06:59:59.999Z\")\n" +
                    "            }, {\n" +
                    "               com.google.samples.apps.iosched.util.ParserUtils.parseTime(\"2014-06-26T07:00:00.000Z\"),\n"+
                    "               com.google.samples.apps.iosched.util.ParserUtils.parseTime(\"2014-06-27T06:59:59.999Z\")\n"+
                    "            },\n" +
                    "        }"
        }

        devfestist {
            applicationId = "com.gdgistanbul.devfest"
//            uniqueContentIdentifier = "event1208"
            manifestPlaceholders = [
                    uniqueContentIdentifier:"14",
                    mapsApiKey:devfestist14_android_maps_api_key
            ]
            buildConfigField "String", "PACKAGE_NAME", "\""+applicationId+"\""

            buildConfigField "boolean", "HAS_VIDEO_LIBRARY", "false"
            buildConfigField "boolean", "SUPPORTS_PEER_BADGE_SCANNING", "false"
            buildConfigField "boolean", "SUPPORTS_REMOTE_VIEWING", "false"
            buildConfigField "boolean", "USE_EXTERNAL_MAPS", "true"

            buildConfigField "double", "VENUE_LATITUDE", "41.02385"
            buildConfigField "double", "VENUE_LONGITUDE", "29.031556"
            buildConfigField "double", "VENUE_CAMERA_LATITUDE", "41.0300"
            buildConfigField "double", "VENUE_CAMERA_LONGITUDE", "29.0316"

            buildConfigField "String", "CONFERENCE_NAME", "\"DevFest Istanbul 2014\""
            buildConfigField "String", "CONFERENCE_DATA_MANIFEST_URL", "\""+devfestist14_android_manifest+"\""
            buildConfigField "String", "OAUTH_APP_NAME", "\"devfesttr14\""
            buildConfigField "String", "OAUTH_API_KEY", "\""+devfestist14_android_oauth_api_key+"\""
            buildConfigField "String", "GCM_API_KEY", "\""+devfestist14_gcm_api_key+"\""
            buildConfigField "String", "GCM_SENDER_ID", "\""+devfestist14_gcm_sender_id+"\""
            buildConfigField "String", "GCM_URL", "\""+devfestist14_gcm_url+"\""

            buildConfigField "String", "BOOTSTRAP_DATA_TIMESTAMP", "\"Mon, 01 Dec 2014 20:50:00 GMT\""
            buildConfigField "String", "CONFERENCE_FEEDBACK_URL", "\""+devfestist14_conference_feedback_url+"\""
            buildConfigField "String", "CONFERENCE_GAME_PACKAGE_NAME", "\"\""
            buildConfigField "String", "CONFERENCE_HASHTAG", "\"#gdg #devfest\""
            buildConfigField "String", "CONFERENCE_HASHTAG_PREFIX", "\"#gdg #devfest\""
            buildConfigField "String", "CONFERENCE_TIMEZONE", "\"GMT+0\""
            buildConfigField "String", "FEEDBACK_API_CODE", "\""+devfestist14_feedback_api_code+"\""
            buildConfigField "String", "FEEDBACK_API_KEY", "\""+devfestist14_feedback_api_key+"\""
            buildConfigField "String", "FEEDBACK_SURVEY_ID", "\""+devfestist14_feedback_survey_id+"\""
            buildConfigField "String", "FEEDBACK_URL", "\""+devfestist14_feedback_url+"\""
            buildConfigField "String", "UNIQUE_CONTENT_IDENTIFIER", "\"14\""
            buildConfigField "String", "WIFI_SSID", "null"
            buildConfigField "String", "WIFI_PASSPHRASE", "null"

            buildConfigField "Class<? extends android.app.Fragment>", "SOCIAL_FRAGMENT_CLASS",
                             "com.google.samples.apps.iosched.ui.TwitterSocialFragment.class"

            buildConfigField "long[][]", "CONFERENCE_DAYS", "new long[][] {\n" +
                    "            {  " +
                    "               com.google.samples.apps.iosched.util.ParserUtils.parseTime(\"2014-12-06T08:00:00.000Z\"),\n" +
                    "               com.google.samples.apps.iosched.util.ParserUtils.parseTime(\"2014-12-06T19:59:59.999Z\")\n" +
                    "            },\n" +
                    "        }"


        }
    }
}

dependencies {
    compile 'com.google.android.gms:play-services:6.1.+'
    compile 'com.android.support:support-v13:21.+'
    compile 'com.android.support:appcompat-v7:21.+'
    compile 'com.android.support:cardview-v7:21.+'
    compile 'com.google.code.gson:gson:2.+'
    compile('com.google.api-client:google-api-client:1.+') {
        exclude group: 'xpp3', module: 'shared'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'junit', module: 'junit'
        exclude group: 'com.google.android', module: 'android'
    }
    compile 'com.google.api-client:google-api-client-android:1.17.+'
    compile 'com.google.apis:google-api-services-plus:+'
    compile 'com.github.japgolly.android:svg-android:2.0.6'
    compile fileTree(dir: 'libs', include: '*.jar')
    compile files('../third_party/glide/library/libs/glide-3.2.0a.jar')
    compile files('../third_party/basic-http-client/libs/basic-http-client-android-0.88.jar')
    // Google Maps Android API utility library
    compile('com.google.maps.android:android-maps-utils:0.3+') {
        exclude group: "com.google.android.gms"
    }
    /* The two dependencies below are only required while we are using http
           Drive appdata. When we start using AppData through GMS,
           they should be removed. */
    compile 'com.google.http-client:google-http-client-gson:+'
    compile 'com.google.apis:google-api-services-drive:+'
    compile('com.crashlytics.sdk.android:crashlytics:2.1.0@aar') {
        transitive = true;
    }
}

def toCamelCase(String string) {
    String result = ""
    string.findAll("[^\\W]+") { String word ->
        result += word.capitalize()
    }
    return result
}

afterEvaluate { project ->
    Configuration runtimeConfiguration = project.configurations.getByName('compile')
    ResolutionResult resolution = runtimeConfiguration.incoming.resolutionResult
    // Forces resolve of configuration
    ModuleVersionIdentifier module = resolution.getAllComponents().find { it.moduleVersion.name.equals("play-services") }.moduleVersion

    String prepareTaskName = "prepare${toCamelCase("${module.group} ${module.name} ${module.version}")}Library"
    File playServiceRootFolder = project.tasks.find { it.name.equals(prepareTaskName) }.explodedDir

    Task stripPlayServices = project.tasks.create(name: 'stripPlayServices', group: "Strip") {
        inputs.files new File(playServiceRootFolder, "classes.jar")
        outputs.dir playServiceRootFolder
        description 'Strip useless packages from Google Play Services library to avoid reaching dex limit'

        doLast {
            copy {
                from(file(new File(playServiceRootFolder, "classes.jar")))
                into(file(playServiceRootFolder))
                rename { fileName ->
                    fileName = "classes_orig.jar"
                }
            }
            tasks.create(name: "stripPlayServices" + module.version, type: Jar) {
                destinationDir = playServiceRootFolder
                archiveName = "classes.jar"
                from(zipTree(new File(playServiceRootFolder, "classes_orig.jar"))) {
                    exclude "com/google/ads/**"
                    exclude "com/google/android/gms/games/**"
                    exclude "com/google/android/gms/panorama/**"
                    exclude "com/google/android/gms/ads/**"
                    exclude "com/google/android/gms/wallet/**"

                    exclude "com/google/android/gms/fitness/**"
                    exclude "com/google/android/gms/cast/**"
                    exclude "com/google/android/gms/ads/doubleclick/**"
                    exclude "com/google/android/gms/ads/mediation/**"
                    exclude "com/google/android/gms/ads/purchase/**"
                    exclude "com/google/android/gms/ads/search/**"
                    exclude "com/google/android/gms/analytics/ecommerce/**"
                    exclude "com/google/android/gms/common/images/**"
                }
            }.execute()
            delete file(new File(playServiceRootFolder, "classes_orig.jar"))
        }
    }

    project.tasks.findAll { it.name.startsWith('prepare') && it.name.endsWith('Dependencies') }.each { Task task ->
        task.dependsOn stripPlayServices
    }
}
